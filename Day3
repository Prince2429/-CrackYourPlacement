//Day 3

#1 Two Sum
 vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> ans;

        for(int i=0;i<nums.size();i++){
            for(int j=i+1;j<nums.size();j++){
                if(nums[i]+nums[j]==target){
                    ans.push_back(i);
                    ans.push_back(j);
                }
            }
        }

        return ans;
    }

#2 Spiral Matrix
vector<int> spiralOrder(vector<vector<int>>& matrix) {
       int row=matrix.size();
       int col=matrix[0].size();
        vector<int> ans;
       int top=0,bottom=row-1;
       int left=0,right=col-1;
       
       while(left<=right && top<=bottom){
       for(int i=left;i<=right;i++){
          ans.push_back(matrix[top][i]);
       }
       top++;
       for(int i=top;i<=bottom;i++){
        ans.push_back(matrix[i][right]);
       }
       right--;
       if(top<=bottom){
       for(int i=right;i>=left;i--){
        ans.push_back(matrix[bottom][i]);
       }
       bottom--;
       }
       
       if(left<=right){
       for(int i=bottom;i>=top;i--){
       ans.push_back(matrix[i][left]);
       }
       left++;
       }
       }

       return ans;
    }

#3 Majority Element

int majorityElement(vector<int>& nums) {
        int ele;
        int cnt=0;
        int n=nums.size();

        for(int i=0;i<nums.size();i++){
          if(cnt==0){
            ele=nums[i];
            cnt=1;
          }
          else if(nums[i]==ele){
            cnt++;
          }
          else
          cnt--;

        }

        int cnt1=0;
        for(int i=0;i<nums.size();i++){
            if(ele==nums[i])
            cnt1++;
        }

        if(cnt1>(n/2))
        return ele;

        return -1;
    }
