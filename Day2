// Day 2 of sheet

#1 set matrix zeroes

 void setZeroes(vector<vector<int>>& matrix) {
        int r=matrix.size();
        int c=matrix[0].size();

        vector<bool> rows(r,false);
        vector<bool> cols(c,false);

        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(matrix[i][j]==0){
                    rows[i]=true;
                    cols[j]=true;
                }
            }
        }

        for(int i=0;i<r;i++){
            if(rows[i]){
                for(int j=0;j<c;j++){
                    matrix[i][j]=0;
                }
            }
        }

        for(int j=0;j<c;j++){
            if(cols[j]){
                for(int i=0;i<r;i++)
                matrix[i][j]=0;
            }
        }
    }

#2 Move zeroes
void moveZeroes(vector<int>& nums) {
        int i=0,zeroc=0;

        for(int j=0;j<nums.size();j++){
            if(nums[j]!=0){
             nums[i++]=nums[j];
            }
            else
            zeroc++;
        }

        while(zeroc>0){
            nums[i++]=0;
            zeroc--;
        }
        return ;
    }

#3 Best time to buy and sell stock
int maxProfit(vector<int>& prices) {
        int profit=0;
        int mini=prices[0];

        for(int i=1;i<prices.size();i++){
          int cost=prices[i]-mini;
          profit=max(profit,cost);
         mini=min(mini,prices[i]);
        }
        return profit;
    }

#4 Chocolate Distribution Problem
long long findMinDiff(vector<long long> a, long long n, long long m){
    sort(a.begin(),a.end());

    long long diff=INT_MAX;
    
    int i=0;
    int j=m-1;
    
    while(j<n){
        diff=min(diff,a[j]-a[i]);
        i++;
        j++;
    }
    
    return diff;
    
    }   
